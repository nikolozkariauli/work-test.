# კომენტარების სახით ახსენით  რაზეა დამოკიდებული
# პროგრამირების ენის სიჩქარე,
# რატომაა პითონი ნელი პროგრამირების ენა

# პროგრამირების ენის სიჩქარე დამოკიდებულია
# რამდენიმე მთავარ ფაქტორზე. პირველ რიგში,
# აქვს მნიშვნელობა, არის თუ არა ენა კომპილირებული თუ ინტერპრეტირებული.
# კომპილირებული ენები, როგორიცაა C და C++, კოდს წინასწარ თარგმნიან
# მანქანის ენის ფორმატში, რაც მისცემს კომპიუტერს შესაძლებლობას,
# ძალიან სწრაფად შეასრულოს პროგრამა. ინტერპრეტირებული ენები,
# როგორიცაა Python, კოდს კითხულობენ და ასრულებენ
# ნაბიჯ-ნაბიჯ შესრულების დროს, რაც ანელებს პროცესს.


# კომენატრების სახით ჩამოწერეთ დღესდღეობით ყველაზე ადვილი პროგრამირების ენები
# python, javascript, html, css.


# პროგრამირების ენები თავდაპირველად წარმოიშვა ასემბლერის ენიდან,
# რომელიც პირდაპირ აპარატურასთან მუშაობდა. დროთა განმავლობაში 
# გაჩნდა მაღალი დონის ენები, როგორიცაა Fortran, Lisp და COBOL,
# რომლებიც გამოიყენებოდა სამეცნიერო და ბიზნეს სფეროებში.
# შემდეგ შეიქმნა ALGOL, რომელმაც დიდი გავლენა მოახდინა მომდევნო ენებზე.
# C ენა, რომელიც შემუშავდა 1970-იან წლებში, გახდა ერთ-ერთი ყველაზე 
# მნიშვნელოვანი ენა სისტემური პროგრამირებისთვის. მისგან განვითარდა C++,
# რომელმაც დაამატა ობიექტზე ორიენტირებული პროგრამირების მახასიათებლები.


# კომენტარების სახით ახსენით, რა არის პროგრმაირების
# ენის მთავარი არსი,
# და რისთვისაა ცუდი და რისთვის კარგი scratch-

# პროგრამირების ენის მთავარი არსი არის ის,
# რომ იგი გამოიყენება იმისთვის, რომ ადამიანი შეძლოს
# კომპიუტერისთვის ინსტრუქციების მიცემა. პროგრამირების
# ენები საშუალებას გვაძლევს დავწეროთ კოდი, რომელიც 
# კომპიუტერს ეტყვის, რა გააკეთოს — ნაბიჯ-ნაბიჯ. მთავარი 
# მიზანია პრობლემის ამოხსნა ლოგიკური, სტრუქტურირებული
# ფორმით და ამ პრობლემის გადაქცევა ავტომატურ მოქმედებად.



# 1)შეასწორეთ კოდში შეცდომები - print(5 > 2 or 6 > 7)


# 2)შექმენით პროგრამა, რომელიც
# შემოატანინებს მომხარებელს რიცხვს,
# და დაპირნტეთ True მარტო მაშინ
# როცა რიცხვი მეტია 16 ზე და არის ლუწი-
# number = int(input("500"))
# number > 16 and number == 0
# print(True)
# print(False)


# შექმენით თქვენთვის სასურველი პროგრამა,
# და კომენტაარებით მიუწერეთ თითოეულ
# ხაზზ pseudocode კომენტარებით-
# print("გამარჯობა!")
# name = "ნიკა"
# print("მოგესალმები" + name + "!")
# age = 10
# print("10",age)
# ame = "ნიკა"
# age = 10
# print("მე ვარ 10 წლის")

# age = int(input("10"))
# future_age = age + 10
# print("20",future_age,"20")





